{"version":3,"sources":["store.js","components/Form/Form.jsx","components/Form/index.js","components/DialogCreate/DialogCreate.jsx","components/DialogCreate/index.js","components/Header/Header.jsx","components/Header/index.js","components/Footer/index.js","components/Footer/Footer.jsx","components/Exercises/LeftPanel.jsx","components/Exercises/RightPanel.jsx","components/Exercises/styles.js","components/Exercises/index.js","components/Exercises/Exercises.jsx","App.js","index.js"],"names":["muscles","id","muscleGroup","showFlag","exercisesList","title","description","styles","makeStyles","theme","inputFields","width","Form","onSubmit","exercise","React","useState","getInitialState","tempExercise","setTempExercise","classes","useEffect","handleChange","name","e","target","value","TextField","required","label","variant","onChange","margin","className","multiline","rows","FormControl","InputLabel","Select","map","item","i","MenuItem","key","DialogActions","Button","onClick","toLocaleLowerCase","replace","color","root","backgroundColor","yellow","DialogCreate","onCreate","open","setOpen","handleToggle","Fab","aria-label","size","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","green","Header","AppBar","position","Toolbar","Typography","style","flex","Footer","category","onSelect","index","findIndex","matches","useMediaQuery","Paper","Tabs","indicatorColor","textColor","scrollButtons","centered","Tab","muscle","LeftPanel","exercises","onDelete","chooseItemToEdit","toggleExercisesList","paperPanel","currentMuscleGroup","find","textTransform","List","component","ListItem","button","ListItemText","primary","ListItemSecondaryAction","IconButton","fontSize","RightPanel","editMode","onEdit","gutterBottom","height","overflowY","breakpoints","down","panelGrid","display","flexDirection","padding","marginTop","Exercises","Grid","container","xs","sm","useStyles","ReactDOM","render","setExercises","musclesList","setMuscles","setExercise","setCategory","setEditMode","exercisesByMuscles","initialExercises","reduce","current","Object","entries","getExercisesByMuscles","Container","CssBaseline","filter","ex","tempMuscles","muscleObj","document","getElementById"],"mappings":"8XAAaA,EAAU,CACrB,CAAEC,GAAI,EAAGC,YAAa,QAASC,UAAU,GACzC,CAAEF,GAAI,EAAGC,YAAa,OAAQC,UAAU,GACxC,CAAEF,GAAI,EAAGC,YAAa,YAAaC,UAAU,GAC7C,CAAEF,GAAI,EAAGC,YAAa,OAAQC,UAAU,GACxC,CAAEF,GAAI,EAAGC,YAAa,OAAQC,UAAU,IAG7BC,EAAgB,CAC3B,CACEH,GAAI,yBACJI,MAAO,yBACPC,YAAY,qWACZN,QAAS,aAEX,CACEC,GAAI,wBACJI,MAAO,wBACPC,YAAY,sbACZN,QAAS,aAEX,CACEC,GAAI,eACJI,MAAO,eACPC,YAAY,gSACZN,QAAS,aAEX,CACEC,GAAI,gBACJI,MAAO,gBACPC,YAAY,iVACZN,QAAS,aAEX,CACEC,GAAI,wBACJI,MAAO,wBACPC,YAAY,4WACZN,QAAS,aAEX,CACEC,GAAI,cACJI,MAAO,cACPC,YAAY,8SACZN,QAAS,aAEX,CACEC,GAAI,eACJI,MAAO,eACPC,YAAY,2aACZN,QAAS,aAEX,CACEC,GAAI,yBACJI,MAAO,yBACPC,YAAY,mRACZN,QAAS,SAEX,CACEC,GAAI,8BACJI,MAAO,8BACPC,YAAY,sPACZN,QAAS,SAEX,CACEC,GAAI,+BACJI,MAAO,+BACPC,YAAY,8NACZN,QAAS,SAEX,CACEC,GAAI,iCACJI,MAAO,iCACPC,YAAY,kTACZN,QAAS,SAEX,CACEC,GAAI,cACJI,MAAO,cACPC,YAAY,uNACZN,QAAS,QAEX,CACEC,GAAI,MACJI,MAAO,MACPC,YAAY,4OACZN,QAAS,QAEX,CACEC,GAAI,kBACJI,MAAO,iBACPC,YAAY,wEACZN,QAAS,QAEX,CACEC,GAAI,SACJI,MAAO,SACPC,YAAY,iNACZN,QAAS,QAEX,CACEC,GAAI,iBACJI,MAAO,iBACPC,YAAY,4OACZN,QAAS,QAEX,CACEC,GAAI,qBACJI,MAAO,qBACPC,YAAY,4fACZN,QAAS,QAEX,CACEC,GAAI,mBACJI,MAAO,mBACPC,YAAY,uWACZN,QAAS,QAEX,CACEC,GAAI,mBACJI,MAAO,mBACPC,YAAY,uUACZN,QAAS,QAEX,CACEC,GAAI,eACJI,MAAO,qBACPC,YAAY,oJACZN,QAAS,QAEX,CACEC,GAAI,0BACJI,MAAO,0BACPC,YAAY,gWACZN,QAAS,QAEX,CACEC,GAAI,YACJI,MAAO,YACPC,YAAY,uYACZN,QAAS,QAEX,CACEC,GAAI,UACJI,MAAO,UACPC,YAAY,2dACZN,QAAS,QAEX,CACEC,GAAI,eACJI,MAAO,eACPC,YAAY,sfACZN,QAAS,QAEX,CACEC,GAAI,gBACJI,MAAO,gBACPC,YAAY,0tBACZN,QAAS,QAEX,CACEC,GAAI,wBACJI,MAAO,wBACPC,YAAY,2eACZN,QAAS,SCxJPO,EAASC,aAAW,SAACC,GAAD,MAAY,CACpCC,YAAa,CACXC,MAAO,SCXIC,MDeA,YAAuC,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SAAY,EACXC,IAAMC,SAASC,KADJ,mBAC5CC,EAD4C,KAC9BC,EAD8B,KAGnD,SAASF,IACP,OAAOH,GAEH,CACET,MAAO,GACPC,YAAa,GACbN,QAAS,IAIjB,IAAMoB,EAAUb,IAahBQ,IAAMM,WAAU,WACVP,GACFK,EAAgBL,KAEjB,CAACA,IAEJ,IAAMQ,EAAe,SAACC,GAAD,OAAU,SAACC,GAC9BL,EAAgB,eACXD,EADU,eAEZK,EAAOC,EAAEC,OAAOC,WAIrB,OACE,8BACE,kBAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,MAAM,QACNC,QAAQ,WACRC,SAAUT,EAAa,SACvBU,OAAO,SACPC,UAAWb,EAAQV,YACnBgB,OAAQR,GAAgB,IAAIb,OAAS,KAEvC,6BACA,kBAACsB,EAAA,EAAD,CACEC,UAAQ,EACRC,MAAM,cACNC,QAAQ,WACRI,WAAS,EACTC,KAAK,IACLJ,SAAUT,EAAa,eACvBU,OAAO,SACPC,UAAWb,EAAQV,YACnBgB,OAAQR,GAAgB,IAAIZ,aAAe,KAE7C,6BACA,kBAAC8B,EAAA,EAAD,CAAaH,UAAWb,EAAQV,aAC9B,kBAAC2B,EAAA,EAAD,gBACA,kBAACC,EAAA,EAAD,CACEZ,OAAQR,GAAgB,IAAIlB,SAAW,GACvC+B,SAAUT,EAAa,YAEtBtB,EAAQuC,KAAI,SAACC,EAAMC,GAClB,OACE,kBAACC,EAAA,EAAD,CAAUC,IAAKF,EAAGf,MAAOc,EAAKtC,aAC3BsC,EAAKtC,kBAMhB,6BACA,kBAAC0C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,QAjEO,WAGnBjC,EAAS,aACPZ,GAAIiB,EAAab,MAAM0C,oBAAoBC,QAAQ,KAAM,MACtD9B,IAGLC,EAAgBF,MAyDmBgC,MAAM,WAArC,a,iBEtFF1C,EAASC,aAAW,SAACC,GAAD,MAAY,CACpCyC,KAAM,CACJC,gBAAiBC,IAAO,UCXbC,MDeA,YAAqC,IAAbC,EAAY,EAAZA,SAAY,EACzBvC,IAAMC,UAAS,GADU,mBAC1CuC,EAD0C,KACpCC,EADoC,KAE3CpC,EAAUb,IAEVkD,EAAe,WACnBD,GAASD,IASX,OACE,oCACE,kBAACG,EAAA,EAAD,CACEzB,UAAWb,EAAQ8B,KACnBS,aAAW,MACXb,QAASW,EACTG,KAAK,SAEL,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CACEN,KAAMA,EACNO,QAASL,EACTM,kBAAgB,qBAEhB,kBAACC,EAAA,EAAD,CAAa/D,GAAG,qBAAhB,yBACA,kBAACgE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,wCACA,kBAAC,EAAD,CAAMrD,SAxBW,SAACC,GACxB2C,IAEAH,EAASxC,U,iBEpBPP,EAASC,aAAW,SAACC,GAAD,MAAY,CACpCyC,KAAM,CACJC,gBAAiBgB,IAAM,UCRZC,EDYA,YAAmB,IAAhBd,EAAe,EAAfA,SACVlC,EAAUb,IAEhB,OACE,kBAAC8D,EAAA,EAAD,CAAQpC,UAAWb,EAAQ8B,KAAMoB,SAAS,UACxC,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAY1C,QAAQ,KAAKmB,MAAM,UAAUwB,MAAO,CAAEC,KAAM,IAAxD,iBAGA,kBAAC,EAAD,CAAcpB,SAAUA,O,mCErBjBqB,ECIA,YAAsC,IAAnC3E,EAAkC,EAAlCA,QAAS4E,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC7BC,EAAQF,EACV5E,EAAQ+E,WAAU,SAACvC,GAAD,OAAUA,EAAKtC,cAAgB0E,KAAY,EAC7D,EAKEI,EAAUC,YAAc,qBAE9B,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEzD,MAAOoD,EACP/C,SATgB,SAACP,EAAGsD,GAAJ,OACpBD,EAAmB,IAAVC,EAAc,GAAK9E,EAAQ8E,EAAQ,KASxCM,eAAe,UACfC,UAAU,UACVC,cAAc,KACdxD,QAAUkD,EAAyB,WAAf,aACpBO,SAAUP,GAEV,kBAACQ,EAAA,EAAD,CAAK3D,MAAM,QACV7B,EAAQuC,KAAI,SAACkD,GAAD,OACX,kBAACD,EAAA,EAAD,CAAK7C,IAAK8C,EAAOvF,YAAa2B,MAAO4D,EAAOvF,oB,0FCjBvC,SAASwF,GAAT,GASX,IARFnF,EAQC,EARDA,OACAoF,EAOC,EAPDA,UACA3F,EAMC,EANDA,QACA4E,EAKC,EALDA,SACAC,EAIC,EAJDA,SACAe,EAGC,EAHDA,SACAC,EAEC,EAFDA,iBACAC,EACC,EADDA,oBAEA,OACE,kBAACZ,EAAA,EAAD,CAAOjD,UAAW1B,EAAOwF,YACtBJ,EAAUpD,KAAI,YAA+B,IAAD,mBAA5BrC,EAA4B,KAAfyF,EAAe,KACrCK,EAAqBhG,EAAQiG,MACjC,SAACR,GAAD,OAAYA,EAAOvF,cAAgBA,KAGrC,OAAQ0E,GAAYA,IAAa1E,EA8B7B,KA7BF,kBAAC,WAAD,CAAUyC,IAAKzC,GACb,kBAAC2C,EAAA,EAAD,CAAQC,QAASgD,EAAoB5F,IACnC,kBAACsE,EAAA,EAAD,CAAY1C,QAAQ,KAAK2C,MAAO,CAAEyB,cAAe,eAC9ChG,IAGJ8F,EAAmB7F,UAClB,kBAACgG,EAAA,EAAD,CAAMC,UAAU,MACbT,EAAUpD,KAAI,YAAoB,IAAjBtC,EAAgB,EAAhBA,GAAII,EAAY,EAAZA,MACpB,OACE,kBAACgG,EAAA,EAAD,CAAU1D,IAAK1C,EAAIqG,QAAM,EAACxD,QAAS,kBAAM+B,EAAS5E,KAChD,kBAACsG,EAAA,EAAD,CAAcC,QAASnG,IACvB,kBAACoG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACE9C,KAAM,QACNd,QAAS+C,EAAiB5F,IAE1B,kBAAC,KAAD,CAAU0G,SAAU,WAEtB,kBAACD,EAAA,EAAD,CAAY9C,KAAM,QAASd,QAAS8C,EAAS3F,IAC3C,kBAAC,IAAD,CAAY0G,SAAU,sBC7CjC,SAASC,GAAT,GAA6D,IAAvCrG,EAAsC,EAAtCA,OAAQO,EAA8B,EAA9BA,SAAU+F,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,OAC/D,OACE,kBAAC5B,EAAA,EAAD,CAAOjD,UAAW1B,EAAOwF,YACvB,kBAACvB,EAAA,EAAD,CAAY1C,QAAQ,KAAKiF,cAAY,GAClCjG,EAAST,OAAS,WAEpBwG,EACC,kBAAC,EAAD,CAAMhG,SAAUiG,EAAQhG,SAAUA,IAElC,kBAAC0D,EAAA,EAAD,CAAY1C,QAAQ,SACjBhB,EAASR,aACR,+DCfZ,IAsBeC,GAtBAC,aAAW,SAACC,GAAD,MAAY,CACpCyC,KAAK,aACH8D,OAAQ,2BACRC,UAAW,QACVxG,EAAMyG,YAAYC,KAAK,MAAQ,CAC9BH,OAAQ,6BAGZI,UAAU,aACRH,UAAW,QACVxG,EAAMyG,YAAYC,KAAK,MAAQ,CAC9BH,OAAQ,QAGZjB,WAAY,CACVsB,QAAS,OACTC,cAAe,SACfC,QAAS,GACTC,UAAW,OCjBAC,GCIA,YAWR,IAVL9B,EAUI,EAVJA,UACAf,EASI,EATJA,SACAC,EAQI,EARJA,SACA/D,EAOI,EAPJA,SACA8E,EAMI,EANJA,SACAC,EAKI,EALJA,iBACAiB,EAII,EAJJA,OACAD,EAGI,EAHJA,SACAf,EAEI,EAFJA,oBACA9F,EACI,EADJA,QAEMyE,EAAQlE,KACd,OACE,kBAACmH,EAAA,EAAD,CAAMzF,UAAWwC,EAAMvB,KAAMyE,WAAS,GACpC,kBAACD,EAAA,EAAD,CAAMzF,UAAWwC,EAAM2C,UAAW5E,MAAI,EAACoF,GAAI,GAAIC,GAAI,GACjD,kBAACnC,GAAD,CACEnF,OAAQkE,EACRkB,UAAWA,EACXd,SAAUA,EACVD,SAAUA,EACVgB,SAAUA,EACVC,iBAAkBA,EAClBC,oBAAqBA,EACrB9F,QAASA,KAGb,kBAAC0H,EAAA,EAAD,CAAMzF,UAAWwC,EAAM2C,UAAW5E,MAAI,EAACoF,GAAI,GAAIC,GAAI,GACjD,kBAACjB,GAAD,CACErG,OAAQkE,EACRoC,SAAUA,EACVC,OAAQA,EACRhG,SAAUA,O,oBC7BdgH,GAAYtH,aAAW,SAACC,GAAD,MAAY,CACvCyC,KAAM,CACJ8D,OAAQ,UACRK,QAAS,OACTC,cAAe,cCTnBS,IAASC,OAAO,mBDaD,WAAgB,IAAD,EACMjH,IAAMC,SAASZ,GADrB,mBACrBuF,EADqB,KACVsC,EADU,OAEElH,IAAMC,SAASkH,GAFjB,mBAErBlI,EAFqB,KAEZmI,EAFY,OAGIpH,IAAMC,SAAS,IAHnB,mBAGrBF,EAHqB,KAGXsH,EAHW,OAIIrH,IAAMC,SAAS,IAJnB,mBAIrB4D,EAJqB,KAIXyD,EAJW,OAKItH,IAAMC,UAAS,GALnB,mBAKrB6F,EALqB,KAKXyB,EALW,KAMtBlH,EAAU0G,KA8EVS,EA5EwB,WAC5B,IAAMC,EAAmBxI,EAAQyI,QAAO,SAAC9C,EAAW+C,GAClD,OAAO,eACF/C,EADL,eAEG+C,EAAQxI,YAAc,OAExB,IAEH,OAAOyI,OAAOC,QACZjD,EAAU8C,QAAO,SAAC9C,EAAW7E,GAAc,IACjCd,EAAYc,EAAZd,QAIR,OAFA2F,EAAU3F,GAAV,sBAAyB2F,EAAU3F,IAAnC,CAA6Cc,IAEtC6E,IACN6C,IA6DoBK,GAE3B,OACE,kBAACC,GAAA,EAAD,CAAW7G,UAAWb,EAAQ8B,MAC5B,kBAAC6F,GAAA,EAAD,MACA,kBAAC,EAAD,CAAQpD,UAAW4C,EAAoBjF,SAxC1B,SAACxC,GAChBmH,EAAa,GAAD,mBAAKtC,GAAL,CAAgB7E,QAyC1B,kBAAC,GAAD,CACEA,SAAUA,EACVd,QAASA,EACT4E,SAAUA,EACVe,UAAW4C,EACX1D,SAtDyB,SAAC5E,GAC9BmI,GAAY,WACV,OAAOzC,EAAUM,MAAK,SAACzD,GAAD,OAAUA,EAAKvC,KAAOA,QAE9CqI,GAAY,IAmDR1C,SA5CW,SAAC3F,GAAD,OAAQ,WACvBgI,EAAatC,EAAUqD,QAAO,SAACxG,GAAD,OAAUA,EAAKvC,KAAOA,MAEhDa,EAASb,KAAOA,IAClBmI,EAAY,IACZE,GAAY,MAwCVzC,iBApCmB,SAAC5F,GAAD,OAAQ,WAC/BqI,GAAY,GACZF,GAAY,WACV,OAAOzC,EAAUM,MAAK,SAACzD,GAAD,OAAUA,EAAKvC,KAAOA,UAkC1C4G,SAAUA,EACVC,OA/BS,SAAChG,GACdmH,GAAa,WACX,OAAOtC,EAAUpD,KAAI,SAAC0G,GAKpB,OAJInI,EAASb,KAAOgJ,EAAGhJ,KACrBgJ,EAAE,eAAQnI,IAGLmI,QAIXb,EAAYtH,GACZwH,GAAY,IAoBRxC,oBA1EsB,SAAC5F,GAAD,OAAiB,WAC3C,IAAMgJ,EAAclJ,EAAQuC,KAAI,SAACC,GAI/B,OAHIA,EAAKtC,cAAgBA,IACvBsC,EAAKrC,UAAYqC,EAAKrC,UAEjBqC,KAGT2F,EAAWe,OAqET,kBAAC,EAAD,CACEtE,SAAUA,EACV5E,QAASA,EACT6E,SArEyB,SAACsE,GAC9Bd,EAAYc,EAAUjJ,mBCpDV,MAASkJ,SAASC,eAAe,W","file":"static/js/main.25215f99.chunk.js","sourcesContent":["export const muscles = [\n  { id: 1, muscleGroup: 'chest', showFlag: false },\n  { id: 2, muscleGroup: 'back', showFlag: false },\n  { id: 3, muscleGroup: 'shoulders', showFlag: false },\n  { id: 4, muscleGroup: 'arms', showFlag: false },\n  { id: 5, muscleGroup: 'legs', showFlag: false }\n];\n\nexport const exercisesList = [\n  {\n    id: 'barbell-standing-press',\n    title: 'Barbell Standing Press',\n    description: `This bodybuilder staple targets your shoulders, but also works your whole body. \"It's a great overall mass builder,\" says White. \"These are really good for strengthening your core and increasing overall strength due to the stability aspect of this movement.\" Start with your hardest move to ensure you've got the core strength to maintain perfect form.`,\n    muscles: 'shoulders'\n  },\n  {\n    id: 'seated-dumbbell-press',\n    title: 'Seated Dumbbell Press',\n    description: `Re-rack your barbell and grab a pair of dumbbells, because they're all you'll need for the rest of the workout. Next grab a bench; sitting down helps isolate the shoulder motion. \"These are really good for not only handling a lot of weight, but also having the freedom of using dumbbells,\" White tells MH. \"You can bring them nice and low to get a really full range of motion.\" Take a load off your feet and put a load on your delts.`,\n    muscles: 'shoulders'\n  },\n  {\n    id: 'arnold-press',\n    title: 'Arnold Press',\n    description: `Named for their Mr Universe-winning, Predator-killing inventor, the rotating motion at the end of this exercise hits more than the standard press to fill out that v-shape. \"It's nice way to do a conventional press while adjusting position to target the anterior deltoids,\" says White.`,\n    muscles: 'shoulders'\n  },\n  {\n    id: 'lateral-raise',\n    title: 'Lateral Raise',\n    description: `The slower you can perform these raises, the more they'll hurt – and the better you're going to look. \"Lateral raises are perfect for isolating the medial part of the deltoid,\" White explains. \"They're more commonly used with a lighter weight and higher reps.\" You'll still be gritting your teeth by the end of the third set.`,\n    muscles: 'shoulders'\n  },\n  {\n    id: 'bent-over-reverse-fly',\n    title: 'Bent over reverse fly',\n    description: `This lateral raise variant will hit you where it hurts, working both shoulders and back. White loves them. \"It's one of the best exercises for targeting the posterior deltoid. For more focus on the movement and less on stabilising things, try placing a bench at 45 degrees and perform this movement lying face down on it.\" Atlas-level shoulders are on the way.`,\n    muscles: 'shoulders'\n  },\n  {\n    id: 'upright-row',\n    title: 'Upright row',\n    description: `Another great mass builder,\" says White. \"Get your elbows higher than your hands for a peak contraction of the deltoid. The upright row also targets the traps.\" Compound moves like this benefit from heavier fare than the raises, allowing for less reps and bigger weights to keep your delts in shock.`,\n    muscles: 'shoulders'\n  },\n  {\n    id: 'front-raises',\n    title: 'Front raises',\n    description: `White recommends front raises for anyone those that have gone through the routine and feel short-changed in the front. \"It’s unlikely that your anterior delts need extra work, so spend more time on your lateral and posterior deltoids. However, if you feel you want to hit your front deltoids harder, then a front raise is the one for you.\" Again, low weight and high reps help you maintain form for shirt-busting gains.`,\n    muscles: 'shoulders'\n  },\n  {\n    id: 'dumbbell-squeeze-press',\n    title: 'Dumbbell Squeeze Press',\n    description: `Lie on a flat bench and hold a dumbbell in each hand. Maintain a neutral grip and begin with your arms straight, directly above you. Bend your arms and lower them to the side of your body so the dumbbells lie just above your chest. Pause and then lift your arms to repeat.`,\n    muscles: 'chest'\n  },\n  {\n    id: 'incline-barbell-bench-press',\n    title: 'Incline barbell bench press',\n    description: `Lie back on a bench set to an incline angle and lift a barbell to shoulder height, palms facing away from you. Breathe out as you press up with both arms. Lock out your arms and squeeze your chest before returning slowly to the start position.`,\n    muscles: 'chest'\n  },\n  {\n    id: 'incline-dumbbell-bench-press',\n    title: 'Incline dumbbell bench press',\n    description: `Lie back on a bench set to a 45-degree angle and lift the weights over your chest, palms facing away from you. Slowly lower one weight, then drive it back up and squeeze your chest at the top.Repeat with the other side.`,\n    muscles: 'chest'\n  },\n  {\n    id: 'close-grip-barbell-bench-press',\n    title: 'Close-grip barbell bench press',\n    description: `Lie back on a flat bench holding a barbell with a narrow, overhand grip. From the starting position, breathe in and lower the bar slowly until it skims the middle of your chest. Push the bar back to the starting position explosively as you breathe out. Focus on pushing the bar using your chest muscles.`,\n    muscles: 'chest'\n  },\n  {\n    id: 'hammer-curl',\n    title: 'Hammer Curl',\n    description: `Hold a dumbbell in each hand with palms facing your sides and arms extended straight down. Keeping your upper arms against your sides, curl both weights at the same time, minimizing momentum used during the curl.`,\n    muscles: 'arms'\n  },\n  {\n    id: 'dip',\n    title: 'Dip',\n    description: `Use dip bars, if available, or place your palms on a bench, chair, or on the floor as you extend your legs in front of you. Lower your body until your upper arms are parallel to the floor, but no lower. Extend your elbows to come up.`,\n    muscles: 'arms'\n  },\n  {\n    id: 'Close-Grip Curl',\n    title: 'close-gripcurl',\n    description: `Curl with your hands inside shoulder width, in the middle of the bar.`,\n    muscles: 'arms'\n  },\n  {\n    id: 'chinup',\n    title: 'Chinup',\n    description: `Grab the bar at (or slightly inside) shoulder width, with a supinated grip. While keeping core tight, pull yourself up until your chin is over the bar. Try not to use momentum to get your chin over the bar.`,\n    muscles: 'arms'\n  },\n  {\n    id: 'diamond-pushup',\n    title: 'Diamond Pushup',\n    description: `Get into pushup position but place your hands close together so your thumbs and index fingers touch. Keeping your body in a straight line with abs braced, lower your torso until your chest is just above the floor, then press back up.`,\n    muscles: 'arms'\n  },\n  {\n    id: 'band-bent-over-row',\n    title: 'Band Bent-Over Row',\n    description: `Grab a low-resistance band and set it out on the ground. Stand on the middle of the band, grabbing the two ends in either hand with a pronated (overhand) grip, hinging at the hips and slightly bending your knees in an athletic stance. Make sure that your back isn't rounded. Squeeze your back to pull the band ends simultaneously to your chest, or as close as the band allows. Pause for a moment at the top of the motion, then slowly return to the original position, working against the band's resistance.`,\n    muscles: 'back'\n  },\n  {\n    id: 'barbell-deadlift',\n    title: 'Barbell Deadlift',\n    description: `Squat down and grasp a barbell with your hands roughly shoulder-width apart. Keep your chest up, pull your shoulders back and look straight ahead as you lift the bar. Focus on taking the weight back onto your heels and keep the bar as close as possible to your body at all times. Lift to thigh level, pause, then return under control to the start position.`,\n    muscles: 'back'\n  },\n  {\n    id: 'dumbbell-pull-up',\n    title: 'Dumbbell Pull-Up',\n    description: `Grab the handles of the pull-up station with your palms facing away from you and your arms fully extended. Your hands should be around shoulder-width apart. Squeeze your shoulder blades together, exhale and drive your elbows towards your hips to bring your chin above the bar. Lower under control back to the start position.`,\n    muscles: 'back'\n  },\n  {\n    id: 'farmers-walk',\n    title: 'Farmers’ Walk',\n    description: `Hold two kettlebells or dumbbells by your side. Keep your arms strong and walk short, quick steps as fast as possible. Turn around and walk back.`,\n    muscles: 'back'\n  },\n  {\n    id: 'dumbbell-single-arm-row',\n    title: 'Dumbbell Single Arm Row',\n    description: `Head to a flat bench and place your right hand against it under your shoulder, keeping your arm straight. Rest your right knee on the bench and step your other leg out to the side. With your free hand grab a dumbbell off the floor and row it up to your side until your upper arm is parallel with the floor. Lower slowly back to the floor and repeat.`,\n    muscles: 'back'\n  },\n  {\n    id: 'leg-press',\n    title: 'Leg Press',\n    description: `Sit squarely in the leg press machine and place your feet shoulder-width apart on the sled. Keeping your chest up and lower back pressed into the pad, carefully unlatch the sled from the safeties. Bend your knees to lower the platform, stopping before your glutes lift off the pad. From there, powerfully extend your knees to press the weight up (but don’t lock them out at the top).`,\n    muscles: 'legs'\n  },\n  {\n    id: 'step-up',\n    title: 'Step-Up',\n    description: `Hold a dumbbell in each hand in front of a knee- to hip-high step, bench or platform. Starting with your feet in a shoulder-width stance, step forward with one leg onto the platform and drive through that thigh to propel your body upward. Bring your trailing leg up and stand atop the platform, then step back with either leg to return to the floor. You can either repeat with the same leading leg for all reps and then switch or alternate your lead leg from step to step.`,\n    muscles: 'legs'\n  },\n  {\n    id: 'pistol-squat',\n    title: 'Pistol Squat',\n    description: `Begin in a standing position. Extend one leg straight out in front of you, balancing on your other foot. From here, squat all the way down by lowering your hips and glutes straight toward the floor, bending your knee until your working thigh is below parallel. At the bottom, your nonworking leg and arms will be out in front of you for balance with your planted foot flat on the floor. Drive through that heel to return to a standing position, making sure to never let that heel come up as you rep.`,\n    muscles: 'legs'\n  },\n  {\n    id: 'walking-lunge',\n    title: 'Walking Lunge',\n    description: `Holding dumbbells in each hand, step forward with one foot. Bend both knees to lower your torso toward the floor, making sure your front knee doesn’t pass your toes at the bottommost position. Stop just short of your rear knee touching the floor, then drive through the heel of your front foot while bringing your rear leg forward until you return to a standing position. Then step with the opposite leg into a lunge, repeating the pattern. Continue alternating down the floor. “The cues I utilize when teaching this movement are to always have your core engaged, with a neutral spine or slight lordosis (extension),” Flores says. “Most important, do not let the front knee turn in or out excessively.”`,\n    muscles: 'legs'\n  },\n  {\n    id: 'bulgarian-split-squat',\n    title: 'Bulgarian Split Squat',\n    description: `Holding a dumbbell in each hand, step forward with one foot and rest your rear foot on an elevated platform or bench, top of the foot facing down. Bend your front knee to lower yourself, making sure that knee doesn’t track out ahead of your toes. (If it does, take a longer step out from the platform.) When your knee joint forms at least a 90-degree angle, reverse the motion, driving through the heel of your forward foot to return to standing. Do not forcefully lock out the knee.`,\n    muscles: 'legs'\n  }\n];\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { muscles } from 'store';\n\nconst styles = makeStyles((theme) => ({\n  inputFields: {\n    width: 300\n  }\n}));\n\nexport default function Form({ onSubmit, exercise }) {\n  const [tempExercise, setTempExercise] = React.useState(getInitialState());\n\n  function getInitialState() {\n    return exercise\n      ? exercise\n      : {\n          title: '',\n          description: '',\n          muscles: ''\n        };\n  }\n\n  const classes = styles();\n\n  const handleSubmit = () => {\n    // TODO: validate\n\n    onSubmit({\n      id: tempExercise.title.toLocaleLowerCase().replace(/ /g, '-'),\n      ...tempExercise\n    });\n\n    setTempExercise(getInitialState());\n  };\n\n  React.useEffect(() => {\n    if (exercise) {\n      setTempExercise(exercise);\n    }\n  }, [exercise]);\n\n  const handleChange = (name) => (e) => {\n    setTempExercise({\n      ...tempExercise,\n      [name]: e.target.value\n    });\n  };\n\n  return (\n    <form>\n      <TextField\n        required\n        label='title'\n        variant='outlined'\n        onChange={handleChange('title')}\n        margin='normal'\n        className={classes.inputFields}\n        value={(tempExercise || {}).title || ''}\n      />\n      <br />\n      <TextField\n        required\n        label='description'\n        variant='outlined'\n        multiline\n        rows='4'\n        onChange={handleChange('description')}\n        margin='normal'\n        className={classes.inputFields}\n        value={(tempExercise || {}).description || ''}\n      />\n      <br />\n      <FormControl className={classes.inputFields}>\n        <InputLabel>Muscles</InputLabel>\n        <Select\n          value={(tempExercise || {}).muscles || ''}\n          onChange={handleChange('muscles')}\n        >\n          {muscles.map((item, i) => {\n            return (\n              <MenuItem key={i} value={item.muscleGroup}>\n                {item.muscleGroup}\n              </MenuItem>\n            );\n          })}\n        </Select>\n      </FormControl>\n      <br />\n      <DialogActions>\n        <Button onClick={handleSubmit} color='primary'>\n          Submit\n        </Button>\n      </DialogActions>\n    </form>\n  );\n}\n","import Form from './Form.jsx';\n\nexport default Form;\n","import React from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Form from 'components/Form';\nimport yellow from '@material-ui/core/colors/yellow';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst styles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: yellow[500]\n  }\n}));\n\nexport default function DialogCreate({ onCreate }) {\n  const [open, setOpen] = React.useState(false);\n  const classes = styles();\n\n  const handleToggle = () => {\n    setOpen(!open);\n  };\n\n  const handleFormSubmit = (exercise) => {\n    handleToggle();\n\n    onCreate(exercise);\n  };\n\n  return (\n    <>\n      <Fab\n        className={classes.root}\n        aria-label='add'\n        onClick={handleToggle}\n        size='small'\n      >\n        <AddIcon />\n      </Fab>\n      <Dialog\n        open={open}\n        onClose={handleToggle}\n        aria-labelledby='form-dialog-title'\n      >\n        <DialogTitle id='form-dialog-title'>Create a New Exercise</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Please fill out the form below.</DialogContentText>\n          <Form onSubmit={handleFormSubmit} />\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n","import DialogCreate from './DialogCreate.jsx';\n\nexport default DialogCreate;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport DialogCreate from 'components/DialogCreate';\nimport green from '@material-ui/core/colors/green';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst styles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: green[800]\n  }\n}));\n\nexport default ({ onCreate }) => {\n  const classes = styles();\n\n  return (\n    <AppBar className={classes.root} position='static'>\n      <Toolbar>\n        <Typography variant='h4' color='inherit' style={{ flex: 1 }}>\n          Gym Exercises\n        </Typography>\n        <DialogCreate onCreate={onCreate} />\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import Header from './Header.jsx';\n\nexport default Header;\n","import Footer from './Footer.jsx';\n\nexport default Footer;\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nexport default ({ muscles, category, onSelect }) => {\n  const index = category\n    ? muscles.findIndex((item) => item.muscleGroup === category) + 1\n    : 0;\n\n  const onIndexSelect = (e, index) =>\n    onSelect(index === 0 ? '' : muscles[index - 1]);\n\n  const matches = useMediaQuery('(min-width:860px)');\n\n  return (\n    <Paper>\n      <Tabs\n        value={index}\n        onChange={onIndexSelect}\n        indicatorColor='primary'\n        textColor='primary'\n        scrollButtons='on'\n        variant={!matches ? 'scrollable' : 'standard'}\n        centered={matches}\n      >\n        <Tab label='All' />\n        {muscles.map((muscle) => (\n          <Tab key={muscle.muscleGroup} label={muscle.muscleGroup} />\n        ))}\n      </Tabs>\n    </Paper>\n  );\n};\n","import React, { Fragment } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\n\nexport default function LeftPanel({\n  styles,\n  exercises,\n  muscles,\n  category,\n  onSelect,\n  onDelete,\n  chooseItemToEdit,\n  toggleExercisesList\n}) {\n  return (\n    <Paper className={styles.paperPanel}>\n      {exercises.map(([muscleGroup, exercises]) => {\n        const currentMuscleGroup = muscles.find(\n          (muscle) => muscle.muscleGroup === muscleGroup\n        );\n\n        return !category || category === muscleGroup ? (\n          <Fragment key={muscleGroup}>\n            <Button onClick={toggleExercisesList(muscleGroup)}>\n              <Typography variant='h5' style={{ textTransform: 'capitalize' }}>\n                {muscleGroup}\n              </Typography>\n            </Button>\n            {currentMuscleGroup.showFlag && (\n              <List component='ul'>\n                {exercises.map(({ id, title }) => {\n                  return (\n                    <ListItem key={id} button onClick={() => onSelect(id)}>\n                      <ListItemText primary={title} />\n                      <ListItemSecondaryAction>\n                        <IconButton\n                          size={'small'}\n                          onClick={chooseItemToEdit(id)}\n                        >\n                          <EditIcon fontSize={'small'} />\n                        </IconButton>\n                        <IconButton size={'small'} onClick={onDelete(id)}>\n                          <DeleteIcon fontSize={'small'} />\n                        </IconButton>\n                      </ListItemSecondaryAction>\n                    </ListItem>\n                  );\n                })}\n              </List>\n            )}\n          </Fragment>\n        ) : null;\n      })}\n    </Paper>\n  );\n}\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Form from 'components/Form';\n\nexport default function RightPanel({ styles, exercise, editMode, onEdit }) {\n  return (\n    <Paper className={styles.paperPanel}>\n      <Typography variant='h4' gutterBottom>\n        {exercise.title || 'Welcome'}\n      </Typography>\n      {editMode ? (\n        <Form onSubmit={onEdit} exercise={exercise} />\n      ) : (\n        <Typography variant='body1'>\n          {exercise.description ||\n            'Click on category and choose exercise to see a description'}\n        </Typography>\n      )}\n    </Paper>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\nconst styles = makeStyles((theme) => ({\n  root: {\n    height: 'calc(100% - 64px - 48px)',\n    overflowY: 'auto',\n    [theme.breakpoints.down('xs')]: {\n      height: 'calc(100% - 56px - 48px)'\n    }\n  },\n  panelGrid: {\n    overflowY: 'auto',\n    [theme.breakpoints.down('xs')]: {\n      height: '50%'\n    }\n  },\n  paperPanel: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: 10,\n    marginTop: 5\n  }\n}));\n\nexport default styles;\n","import Exercises from './Exercises';\n\nexport default Exercises;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport LeftPanel from './LeftPanel.jsx';\nimport RightPanel from './RightPanel.jsx';\nimport styles from './styles';\n\nexport default ({\n  exercises,\n  category,\n  onSelect,\n  exercise,\n  onDelete,\n  chooseItemToEdit,\n  onEdit,\n  editMode,\n  toggleExercisesList,\n  muscles\n}) => {\n  const style = styles();\n  return (\n    <Grid className={style.root} container>\n      <Grid className={style.panelGrid} item xs={12} sm={6}>\n        <LeftPanel\n          styles={style}\n          exercises={exercises}\n          onSelect={onSelect}\n          category={category}\n          onDelete={onDelete}\n          chooseItemToEdit={chooseItemToEdit}\n          toggleExercisesList={toggleExercisesList}\n          muscles={muscles}\n        />\n      </Grid>\n      <Grid className={style.panelGrid} item xs={12} sm={6}>\n        <RightPanel\n          styles={style}\n          editMode={editMode}\n          onEdit={onEdit}\n          exercise={exercise}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n","import React from 'react';\nimport Header from 'components/Header';\nimport Footer from 'components/Footer';\nimport Exercises from 'components/Exercises';\nimport { muscles as musclesList, exercisesList } from './store.js';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 'inherit',\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}));\n\nexport default function App() {\n  const [exercises, setExercises] = React.useState(exercisesList);\n  const [muscles, setMuscles] = React.useState(musclesList);\n  const [exercise, setExercise] = React.useState({});\n  const [category, setCategory] = React.useState('');\n  const [editMode, setEditMode] = React.useState(false);\n  const classes = useStyles();\n\n  const getExercisesByMuscles = () => {\n    const initialExercises = muscles.reduce((exercises, current) => {\n      return {\n        ...exercises,\n        [current.muscleGroup]: []\n      };\n    }, {});\n\n    return Object.entries(\n      exercises.reduce((exercises, exercise) => {\n        const { muscles } = exercise;\n\n        exercises[muscles] = [...exercises[muscles], exercise];\n\n        return exercises;\n      }, initialExercises)\n    );\n  };\n\n  const toggleExercisesList = (muscleGroup) => () => {\n    const tempMuscles = muscles.map((item) => {\n      if (item.muscleGroup === muscleGroup) {\n        item.showFlag = !item.showFlag;\n      }\n      return item;\n    });\n\n    setMuscles(tempMuscles);\n  };\n\n  const handleCategorySelected = (muscleObj) => {\n    setCategory(muscleObj.muscleGroup);\n  };\n\n  const handleExerciseSelected = (id) => {\n    setExercise(() => {\n      return exercises.find((item) => item.id === id);\n    });\n    setEditMode(false);\n  };\n\n  const onCreate = (exercise) => {\n    setExercises([...exercises, exercise]);\n  };\n\n  const onDelete = (id) => () => {\n    setExercises(exercises.filter((item) => item.id !== id));\n\n    if (exercise.id === id) {\n      setExercise({});\n      setEditMode(false);\n    }\n  };\n\n  const chooseItemToEdit = (id) => () => {\n    setEditMode(true);\n    setExercise(() => {\n      return exercises.find((item) => item.id === id);\n    });\n  };\n\n  const onEdit = (exercise) => {\n    setExercises(() => {\n      return exercises.map((ex) => {\n        if (exercise.id === ex.id) {\n          ex = { ...exercise };\n        }\n\n        return ex;\n      });\n    });\n\n    setExercise(exercise);\n    setEditMode(false);\n  };\n\n  const exercisesByMuscles = getExercisesByMuscles();\n\n  return (\n    <Container className={classes.root}>\n      <CssBaseline />\n      <Header exercises={exercisesByMuscles} onCreate={onCreate} />\n\n      <Exercises\n        exercise={exercise}\n        muscles={muscles}\n        category={category}\n        exercises={exercisesByMuscles}\n        onSelect={handleExerciseSelected}\n        onDelete={onDelete}\n        chooseItemToEdit={chooseItemToEdit}\n        editMode={editMode}\n        onEdit={onEdit}\n        toggleExercisesList={toggleExercisesList}\n      />\n\n      <Footer\n        category={category}\n        muscles={muscles}\n        onSelect={handleCategorySelected}\n      />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}